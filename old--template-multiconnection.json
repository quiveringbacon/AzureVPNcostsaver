{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_backuplogicapp_name": {
            "defaultValue": "backup-logicapp",
            "type": "String"
        },
        "workflows_restorelogicapp_name": {
            "defaultValue": "restore-logicapp",
            "type": "String"
        },
        "backup_start_time": {
            "defaultValue": "2023-11-14T23:00:00Z",
            "type": "String"
        },
        "restore_start_time": {
            "defaultValue": "2023-11-15T12:00:00Z",
            "type": "String"
        },
        "storageAccount_name": {
            "defaultValue": "lgappstorage11223344",
            "type": "String"
        },
        "VPN_connection_object_resource_id": {
            "defaultValue": "Insert the resourceid of the vpn connection object",
            "type": "String"
        },
        "VPN_connection2_object_resource_id": {
            "defaultValue": "Insert the resourceid of the second vpn connection object",
            "type": "String"
        },
        "VPNGateway_resource_id": {
            "defaultValue": "Insert the resourceid of the vpn gateway object",
            "type": "String"
        }
    },
    "variables": {
        "connections_azureblob_name": "azureblob"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccount_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connections_azureblob_name')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "toblob",
                "authenticatedUser": {},
                "statuses": [
                    {
                        "status": "Ready"
                    }
                ],
                "parameterValueSet": {
                    "name": "managedIdentityAuth",
                    "values": {}
                    },
                "customParameterValues": {},
                "createdTime": "2023-11-01T14:37:09.1628205Z",
                "changedTime": "2023-11-01T14:37:09.1628205Z",
                "api": {
                    "name": "[variables('connections_azureblob_name')]",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1664/1.0.1664.3477/', variables('connections_azureblob_name'), '/icon.png')]",
                    "brandColor": "#804998",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]",
                    "type": "Microsoft.Web/locations/managedApis"
                }
                
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_backuplogicapp_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "acctname":{
                           "defaultValue": {},
                            "type": "String" 
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "[parameters('backup_start_time')]"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "[parameters('backup_start_time')]"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_blob_(V2)": {
                            "runAfter": {
                                "Set_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('fwbody')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(parameters('acctname'))}/files",
                                "queries": {
                                    "folderPath": "/blobl1",
                                    "name": "backup1.json",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_blob_(V2)_2": {
                            "runAfter": {
                                "Set_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('conn1')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('acctname')))}/files",
                                "queries": {
                                    "folderPath": "/blobl1",
                                    "name": "backup2.json",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_blob_(V2)_3": {
                            "runAfter": {
                                "Set_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('conn2')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('acctname')))}/files",
                                "queries": {
                                    "folderPath": "/blobl1",
                                    "name": "backup3.json",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "options": "SkipAllParameterization",
                                    "resources": [
                                        "[parameters('VPN_connection_object_resource_id')]",
                                        "[parameters('VPN_connection2_object_resource_id')]",
                                        "[parameters('VPNGateway_resource_id')]"
                                    ]
                                },
                                "method": "POST",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/exportTemplate?api-version=2021-04-01')]"
                            }
                        },
                        "HTTP_2": {
                            "runAfter": {
                                "Create_blob_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "options": "SkipAllParameterization",
                                    "resources": [
                                        "[parameters('VPN_connection_object_resource_id')]"                                    
                                    ]
                                },
                                "method": "POST",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/exportTemplate?api-version=2021-04-01')]"
                            }
                        },
                        "HTTP_3": {
                            "runAfter": {
                                "Create_blob_(V2)_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "options": "SkipAllParameterization",
                                    "resources": [
                                        "[parameters('VPN_connection2_object_resource_id')]"                                    
                                    ]
                                },
                                "method": "POST",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/exportTemplate?api-version=2021-04-01')]"
                            }
                        },
                        "HTTP_4": {
                            "runAfter": {
                                "Create_blob_(V2)_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "DELETE",
                                "uri": "[concat('https://management.azure.com', parameters('VPN_connection_object_resource_id'), '?api-version=2021-04-01')]"
                            }
                        },
                        "HTTP_5": {
                            "runAfter": {
                                "HTTP_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "DELETE",
                                "uri": "[concat('https://management.azure.com', parameters('VPN_connection2_object_resource_id'), '?api-version=2021-04-01')]"
                            }
                        },
                        "HTTP_6": {
                            "runAfter": {
                                "HTTP_5": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "DELETE",
                                "uri": "[concat('https://management.azure.com', parameters('VPNGateway_resource_id'), '?api-version=2021-04-01')]"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fwbody",
                                        "type": "string",
                                        "value": "@{body('HTTP')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fwbody2",
                                        "type": "string",
                                        "value": "@variables('fwbody')"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "HTTP_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "conn1",
                                        "type": "string",
                                        "value": "@{body('HTTP_2')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_4": {
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "conn1-2",
                                        "type": "string",
                                        "value": "@variables('conn1')"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_5": {
                            "runAfter": {
                                "HTTP_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "conn2",
                                        "type": "string",
                                        "value": "@{body('HTTP_3')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_6": {
                            "runAfter": {
                                "Initialize_variable_5": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "conn2-2",
                                        "type": "string",
                                        "value": "@variables('conn2')"
                                    }
                                ]
                            }
                        },
                        "Set_variable": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "fwbody",
                                "value": "@{slice(variables('fwbody2'),12,-1)}"
                            }
                        },
                        "Set_variable_2": {
                            "runAfter": {
                                "Initialize_variable_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "conn1",
                                "value": "@{slice(variables('conn1-2'),12,-1)}"
                            }
                        },
                        "Set_variable_3": {
                            "runAfter": {
                                "Initialize_variable_6": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "conn2",
                                "value": "@{slice(variables('conn2-2'),12,-1)}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            }
                        }
                    },
                    "acctname": {
                        "value": "[parameters('storageAccount_name')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_restorelogicapp_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "acctname":{
                           "defaultValue": {},
                            "type": "String" 
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "[parameters('restore_start_time')]"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "[parameters('restore_start_time')]"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Delay": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Wait",
                            "inputs": {
                                "interval": {
                                    "count": 25,
                                    "unit": "Minute"
                                }
                            }
                        },
                        "Get_blob_content_(V2)": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmYmxvYmwxJTJmYmFja3VwMS5qc29u": "/blobl1/backup1.json"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(parameters('acctname'))}/files/@{encodeURIComponent(encodeURIComponent('JTJmYmxvYmwxJTJmYmFja3VwMS5qc29u'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_blob_content_(V2)_2": {
                            "runAfter": {
                                "Delay": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('acctname')))}/files/@{encodeURIComponent(encodeURIComponent('/blobl1/backup2.json'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_blob_content_(V2)_3": {
                            "runAfter": {
                                "HTTP_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('acctname')))}/files/@{encodeURIComponent(encodeURIComponent('/blobl1/backup3.json'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": "@variables('test2')"
                                    }
                                },
                                "method": "PUT",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/providers/Microsoft.Resources/deployments/deploy1?api-version=2020-10-01')]"
                            }
                        },
                        "HTTP_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": "@variables('test3')"
                                    }
                                },
                                "method": "PUT",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/providers/Microsoft.Resources/deployments/deploy2?api-version=2020-10-01')]"
                            }
                        },
                        "HTTP_3": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": "@variables('test4')"
                                    }
                                },
                                "method": "PUT",
                                "uri": "[concat('https://management.azure.com/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/providers/Microsoft.Resources/deployments/deploy3?api-version=2020-10-01')]"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Get_blob_content_(V2)_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "test3",
                                        "type": "object",
                                        "value": "@json(body('Get_blob_content_(V2)_2'))"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Get_blob_content_(V2)_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "test4",
                                        "type": "object",
                                        "value": "@json(body('Get_blob_content_(V2)_3'))"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Get_blob_content_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "test2",
                                        "type": "object",
                                        "value": "@json(body('Get_blob_content_(V2)'))"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            }
                        }
                    },
                    "acctname": {
                        "value": "[parameters('storageAccount_name')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccount_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccount_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccount_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccount_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccount_name'), '/default/blobl1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccount_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Blob"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id,'contrib1'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_backuplogicapp_name')), '2019-05-01','full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id,'contrib2'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_restorelogicapp_name')), '2019-05-01','full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id,'blobcontrib11'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_backuplogicapp_name')), '2019-05-01','full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id,'blobcontrib22'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_restorelogicapp_name')), '2019-05-01','full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        }
    ]
}
